<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://brooke.fyi/</id><title>Brooke Rhodes</title><subtitle>Software Engineer working on games, systems, and tools.</subtitle> <updated>2023-05-19T13:43:20+01:00</updated> <author> <name>Brooke Rhodes</name> <uri>https://brooke.fyi/</uri> </author><link rel="self" type="application/atom+xml" href="https://brooke.fyi/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://brooke.fyi/"/> <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator> <rights> © 2023 Brooke Rhodes </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Creating a Character Controller with C++ (Part Two)</title><link href="https://brooke.fyi/posts/cpp-character-controller-2/" rel="alternate" type="text/html" title="Creating a Character Controller with C++ (Part Two)" /><published>2023-04-18T00:00:00+01:00</published> <updated>2023-04-18T00:00:00+01:00</updated> <id>https://brooke.fyi/posts/cpp-character-controller-2/</id> <content src="https://brooke.fyi/posts/cpp-character-controller-2/" /> <author> <name>Brooke Rhodes</name> </author> <category term="University" /> <category term="Devblog" /> <summary> After planning the character controller, it was time to implement it. The implementation so far has been very involved, so I will only cover the high-level points required to get to a minimally viable character controller. Architecture To support the extensible nature of this character controller, it needs to be architectured in much of a “distributed” manner. This means there is a central Si... </summary> </entry> <entry><title>Creating a Character Controller with C++ (Part One)</title><link href="https://brooke.fyi/posts/cpp-character-controller-1/" rel="alternate" type="text/html" title="Creating a Character Controller with C++ (Part One)" /><published>2023-04-12T00:00:00+01:00</published> <updated>2023-04-12T00:00:00+01:00</updated> <id>https://brooke.fyi/posts/cpp-character-controller-1/</id> <content src="https://brooke.fyi/posts/cpp-character-controller-1/" /> <author> <name>Brooke Rhodes</name> </author> <category term="University" /> <category term="Devblog" /> <summary> Over the past month or so, as part of a larger group assignment, I used C++ and Unreal Engine in a real-world project for the first time. The group assignment was to create a networked dodgeball game, and my role was the character controller and networking. Being a university assignment, this was the perfect opportunity to experiment with technology I had never used before. I have long been fa... </summary> </entry> <entry><title>Springs for Animation in Unity</title><link href="https://brooke.fyi/posts/unity-springs/" rel="alternate" type="text/html" title="Springs for Animation in Unity" /><published>2023-03-24T00:00:00+00:00</published> <updated>2023-05-19T08:12:26+01:00</updated> <id>https://brooke.fyi/posts/unity-springs/</id> <content src="https://brooke.fyi/posts/unity-springs/" /> <author> <name>Brooke Rhodes</name> </author> <category term="University" /> <category term="Devblog" /> <summary> I come from a Roblox and web background, where Springs see widespread use in all facets of animation. However, this tool seems somewhat less recognized outside of these spaces, especially in the broader game development scene. This blog post aims to shed light on the concept of Springs, their usage, and their benefits in game development, along with demonstrating how I’ve integrated them into m... </summary> </entry> <entry><title>Rust and Bevy Engine: One-Button GameJam (Part Three)</title><link href="https://brooke.fyi/posts/one-button-jam-3/" rel="alternate" type="text/html" title="Rust and Bevy Engine: One-Button GameJam (Part Three)" /><published>2023-02-14T00:00:00+00:00</published> <updated>2023-05-19T08:12:26+01:00</updated> <id>https://brooke.fyi/posts/one-button-jam-3/</id> <content src="https://brooke.fyi/posts/one-button-jam-3/" /> <author> <name>Brooke Rhodes</name> </author> <category term="University" /> <category term="Devblog" /> <summary> This is the final entry for my One-Button GameJam series of blog posts, and we’ll be covering the game’s core mechanic - golf balls! Everything from physics to sound. Physics If I were to remake this game, with more time than two weeks, I would probably create a bespoke physics controller for the golf balls. At the time, the Bevy Engine physics scene was relatively young, and the most popular... </summary> </entry> <entry><title>Rust and Bevy Engine: One-Button GameJam (Part Two)</title><link href="https://brooke.fyi/posts/one-button-jam-2/" rel="alternate" type="text/html" title="Rust and Bevy Engine: One-Button GameJam (Part Two)" /><published>2023-01-26T00:00:00+00:00</published> <updated>2023-05-19T08:12:26+01:00</updated> <id>https://brooke.fyi/posts/one-button-jam-2/</id> <content src="https://brooke.fyi/posts/one-button-jam-2/" /> <author> <name>Brooke Rhodes</name> </author> <category term="University" /> <category term="Devblog" /> <summary> Given that we only had two weeks to complete this game jam, our group’s concept had to be simple to execute. After exploring various ideas, we ultimately chose a minigolf-style game that used only the mouse as our one button. Considering this is a programming blog, I will not delve into details about the game design. However, this is what the control scheme looked like: Mouse Movement = Pan C... </summary> </entry> </feed>
